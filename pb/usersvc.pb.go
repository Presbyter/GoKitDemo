// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usersvc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginType int32

const (
	LoginType_Phone  LoginType = 0
	LoginType_WeChat LoginType = 1
	LoginType_QQ     LoginType = 2
	LoginType_Apple  LoginType = 3
)

var LoginType_name = map[int32]string{
	0: "Phone",
	1: "WeChat",
	2: "QQ",
	3: "Apple",
}

var LoginType_value = map[string]int32{
	"Phone":  0,
	"WeChat": 1,
	"QQ":     2,
	"Apple":  3,
}

func (x LoginType) String() string {
	return proto.EnumName(LoginType_name, int32(x))
}

func (LoginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{0}
}

type DeviceType int32

const (
	DeviceType_Android DeviceType = 0
	DeviceType_IOS     DeviceType = 1
)

var DeviceType_name = map[int32]string{
	0: "Android",
	1: "IOS",
}

var DeviceType_value = map[string]int32{
	"Android": 0,
	"IOS":     1,
}

func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}

func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{1}
}

type LoginRequest struct {
	LoginType            LoginType  `protobuf:"varint,1,opt,name=loginType,proto3,enum=pb.LoginType" json:"loginType,omitempty"`
	Value                string     `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Code                 string     `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	DeviceType           DeviceType `protobuf:"varint,4,opt,name=deviceType,proto3,enum=pb.DeviceType" json:"deviceType,omitempty"`
	DeviceCode           string     `protobuf:"bytes,5,opt,name=deviceCode,proto3" json:"deviceCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetLoginType() LoginType {
	if m != nil {
		return m.LoginType
	}
	return LoginType_Phone
}

func (m *LoginRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *LoginRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *LoginRequest) GetDeviceType() DeviceType {
	if m != nil {
		return m.DeviceType
	}
	return DeviceType_Android
}

func (m *LoginRequest) GetDeviceCode() string {
	if m != nil {
		return m.DeviceCode
	}
	return ""
}

type LoginResponse struct {
	Code                 int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data                 *LoginResponse_DataStruct `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{1}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LoginResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *LoginResponse) GetData() *LoginResponse_DataStruct {
	if m != nil {
		return m.Data
	}
	return nil
}

type LoginResponse_DataStruct struct {
	UserID               int32    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	NickName             string   `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"`
	Gender               int32    `protobuf:"varint,3,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Avatar               string   `protobuf:"bytes,4,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse_DataStruct) Reset()         { *m = LoginResponse_DataStruct{} }
func (m *LoginResponse_DataStruct) String() string { return proto.CompactTextString(m) }
func (*LoginResponse_DataStruct) ProtoMessage()    {}
func (*LoginResponse_DataStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{1, 0}
}

func (m *LoginResponse_DataStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse_DataStruct.Unmarshal(m, b)
}
func (m *LoginResponse_DataStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse_DataStruct.Marshal(b, m, deterministic)
}
func (m *LoginResponse_DataStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse_DataStruct.Merge(m, src)
}
func (m *LoginResponse_DataStruct) XXX_Size() int {
	return xxx_messageInfo_LoginResponse_DataStruct.Size(m)
}
func (m *LoginResponse_DataStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse_DataStruct.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse_DataStruct proto.InternalMessageInfo

func (m *LoginResponse_DataStruct) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *LoginResponse_DataStruct) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *LoginResponse_DataStruct) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *LoginResponse_DataStruct) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.LoginType", LoginType_name, LoginType_value)
	proto.RegisterEnum("pb.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterType((*LoginRequest)(nil), "pb.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "pb.LoginResponse")
	proto.RegisterType((*LoginResponse_DataStruct)(nil), "pb.LoginResponse.DataStruct")
}

func init() { proto.RegisterFile("usersvc.proto", fileDescriptor_c11b3307f9b338e4) }

var fileDescriptor_c11b3307f9b338e4 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xdd, 0x6a, 0xea, 0x40,
	0x18, 0x34, 0x89, 0x89, 0x27, 0x9f, 0x47, 0xd9, 0xf3, 0x71, 0x28, 0x22, 0xa5, 0x48, 0xae, 0xc4,
	0x42, 0x28, 0x96, 0x5e, 0xf6, 0x42, 0x14, 0x8a, 0x20, 0xb6, 0xc6, 0x96, 0x5e, 0xaf, 0xc9, 0xa2,
	0xa1, 0x9a, 0x6c, 0x37, 0x9b, 0x40, 0x1f, 0xac, 0x0f, 0xd3, 0xb7, 0x29, 0xbb, 0xcd, 0x8f, 0xd0,
	0xbb, 0x9d, 0xd9, 0xc9, 0xcc, 0x64, 0x58, 0xe8, 0xe5, 0x19, 0x13, 0x59, 0x11, 0xfa, 0x5c, 0xa4,
	0x32, 0x45, 0x93, 0xef, 0xbc, 0x4f, 0x03, 0xfe, 0xae, 0xd2, 0x7d, 0x9c, 0x04, 0xec, 0x3d, 0x67,
	0x99, 0xc4, 0x6b, 0x70, 0x8f, 0x0a, 0x3f, 0x7f, 0x70, 0x36, 0x30, 0x46, 0xc6, 0xb8, 0x3f, 0xed,
	0xf9, 0x7c, 0xe7, 0xaf, 0x2a, 0x32, 0x68, 0xee, 0xf1, 0x3f, 0xd8, 0x05, 0x3d, 0xe6, 0x6c, 0x60,
	0x8e, 0x8c, 0xb1, 0x1b, 0xfc, 0x00, 0x44, 0x68, 0x87, 0x69, 0xc4, 0x06, 0x96, 0x26, 0xf5, 0x19,
	0x7d, 0x80, 0x88, 0x15, 0x71, 0xc8, 0xb4, 0x6f, 0x5b, 0xfb, 0xf6, 0x95, 0xef, 0xa2, 0x66, 0x83,
	0x33, 0x05, 0x5e, 0x55, 0xfa, 0xb9, 0x72, 0xb2, 0xb5, 0xd3, 0x19, 0xe3, 0x7d, 0x19, 0xd0, 0x2b,
	0x7b, 0x67, 0x3c, 0x4d, 0xb2, 0x26, 0x55, 0x75, 0xb6, 0xcb, 0x54, 0x02, 0xd6, 0x29, 0xdb, 0x97,
	0xed, 0xd4, 0x11, 0x6f, 0xa0, 0x1d, 0x51, 0x49, 0x75, 0xb7, 0xee, 0xf4, 0xb2, 0xfe, 0xb3, 0xca,
	0xc6, 0x5f, 0x50, 0x49, 0xb7, 0x52, 0xe4, 0xa1, 0x0c, 0xb4, 0x72, 0xc8, 0x01, 0x1a, 0x0e, 0x2f,
	0xc0, 0x79, 0xc9, 0x98, 0x58, 0x2e, 0xca, 0x9c, 0x12, 0xe1, 0x10, 0xfe, 0xac, 0xe3, 0xf0, 0x6d,
	0x4d, 0x4f, 0xd5, 0x18, 0x35, 0x56, 0xdf, 0x3c, 0xb0, 0x24, 0x62, 0x42, 0xa7, 0xda, 0x41, 0x89,
	0x14, 0x3f, 0x2b, 0xa8, 0xa4, 0x42, 0xef, 0xe1, 0x06, 0x25, 0x9a, 0xdc, 0x81, 0x5b, 0xaf, 0x8d,
	0x2e, 0xd8, 0x4f, 0x87, 0x34, 0x61, 0xa4, 0x85, 0x00, 0xce, 0x2b, 0x9b, 0x1f, 0xa8, 0x24, 0x06,
	0x3a, 0x60, 0x6e, 0x36, 0xc4, 0x54, 0xd7, 0x33, 0xce, 0x8f, 0x8c, 0x58, 0x13, 0x0f, 0xa0, 0x19,
	0x13, 0xbb, 0xd0, 0x99, 0x25, 0x91, 0x48, 0xe3, 0x88, 0xb4, 0xb0, 0x03, 0xd6, 0xf2, 0x71, 0x4b,
	0x8c, 0xe9, 0x3d, 0x74, 0x55, 0xe1, 0x2d, 0x13, 0x4a, 0x88, 0x3e, 0xd8, 0x3a, 0x09, 0xc9, 0xd9,
	0x10, 0xfa, 0x1d, 0x0c, 0xff, 0xfd, 0x9a, 0xc6, 0x6b, 0xed, 0x1c, 0xfd, 0x70, 0x6e, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x61, 0xf0, 0xe2, 0x8c, 0x49, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/pb.UserService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) Login(ctx context.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _UserService_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usersvc.proto",
}
